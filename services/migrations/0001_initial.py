# Generated by Django 5.1.4 on 2025-01-28 14:45

import django.core.validators
import django.db.models.deletion
import services.utils
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authentication', '0001_initial'),
        ('base', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnnouncementCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория объявления',
                'verbose_name_plural': 'Категории объявлений',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CategoryOrganization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=150, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=150, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=150, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория организации',
                'verbose_name_plural': 'Категории организаций',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CorruptionRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=80, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=80, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=80, null=True, verbose_name='Название')),
                ('short_desc', models.TextField(max_length=500, verbose_name='Краткое описание')),
                ('short_desc_uz', models.TextField(max_length=500, null=True, verbose_name='Краткое описание')),
                ('short_desc_ru', models.TextField(max_length=500, null=True, verbose_name='Краткое описание')),
                ('short_desc_en', models.TextField(max_length=500, null=True, verbose_name='Краткое описание')),
                ('image', models.ImageField(upload_to='corruption_risk/', verbose_name='Изображение')),
                ('form_url', models.URLField(verbose_name='URL-адрес Формы')),
                ('excel_url', models.URLField(verbose_name='URL-адрес Эксель')),
                ('start_date', models.DateTimeField(verbose_name='Дата начала')),
                ('end_date', models.DateTimeField(verbose_name='Дата окончания')),
                ('result', tinymce.models.HTMLField(blank=True, verbose_name='Результат')),
                ('result_uz', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Результат')),
                ('result_ru', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Результат')),
                ('result_en', tinymce.models.HTMLField(blank=True, null=True, verbose_name='Результат')),
                ('status', models.IntegerField(choices=[(1, 'In Progress'), (2, 'Closed')], default=1, verbose_name='Статус')),
            ],
            options={
                'verbose_name': 'Риск коррупции',
                'verbose_name_plural': 'Риск коррупции',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='CorruptionRiskMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('filename', models.CharField(max_length=60, verbose_name='Имя файла')),
                ('filename_uz', models.CharField(max_length=60, null=True, verbose_name='Имя файла')),
                ('filename_ru', models.CharField(max_length=60, null=True, verbose_name='Имя файла')),
                ('filename_en', models.CharField(max_length=60, null=True, verbose_name='Имя файла')),
                ('file', models.FileField(upload_to='corruption_risk/media', verbose_name='Файл')),
            ],
            options={
                'verbose_name': 'Коррупционный риск СМИ',
                'verbose_name_plural': 'Коррупционный риск СМИ',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ElectronLibraryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=40, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=40, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=40, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=40, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория Электронная библиотека',
                'verbose_name_plural': 'Категория Электронная библиотека',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='HandoutCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория раздаточного материала',
                'verbose_name_plural': 'Категории раздаточных материало',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='HonestyTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', tinymce.models.HTMLField(verbose_name='Вопрос')),
                ('question_uz', tinymce.models.HTMLField(null=True, verbose_name='Вопрос')),
                ('question_ru', tinymce.models.HTMLField(null=True, verbose_name='Вопрос')),
                ('question_en', tinymce.models.HTMLField(null=True, verbose_name='Вопрос')),
                ('advice', models.CharField(max_length=300, verbose_name='Cовет')),
                ('advice_uz', models.CharField(max_length=300, null=True, verbose_name='Cовет')),
                ('advice_ru', models.CharField(max_length=300, null=True, verbose_name='Cовет')),
                ('advice_en', models.CharField(max_length=300, null=True, verbose_name='Cовет')),
            ],
            options={
                'verbose_name': 'Тест на честность',
                'verbose_name_plural': 'Тест на честность',
                'ordering': ('?',),
            },
        ),
        migrations.CreateModel(
            name='HonestyTestCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=40, verbose_name='Название категории')),
                ('name_uz', models.CharField(max_length=40, null=True, verbose_name='Название категории')),
                ('name_ru', models.CharField(max_length=40, null=True, verbose_name='Название категории')),
                ('name_en', models.CharField(max_length=40, null=True, verbose_name='Название категории')),
                ('image', models.ImageField(upload_to='honesty_test/category', verbose_name='Изображение')),
                ('in_term', models.BooleanField(default=True, verbose_name='B перспективе')),
            ],
            options={
                'verbose_name': 'Категория тест на честность',
                'verbose_name_plural': 'Категория тест на честность',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='NewsCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=30, verbose_name='Название категории')),
                ('name_uz', models.CharField(max_length=30, null=True, verbose_name='Название категории')),
                ('name_ru', models.CharField(max_length=30, null=True, verbose_name='Название категории')),
                ('name_en', models.CharField(max_length=30, null=True, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория новостей',
                'verbose_name_plural': 'Категория новостей',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=80, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=80, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=80, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Профессия',
                'verbose_name_plural': 'Профессии',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ReportType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=120, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=120, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=120, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=120, null=True, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Тип отчета',
                'verbose_name_plural': 'Тип отчета',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TechnicalSupport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.FileField(upload_to='technical_support/')),
                ('comment', models.TextField(max_length=300, verbose_name='Комментарий')),
            ],
            options={
                'verbose_name': 'Техническая поддержка',
                'verbose_name_plural': 'Техническая поддержка',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TrainingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=40, verbose_name='Название категории')),
                ('name_uz', models.CharField(max_length=40, null=True, verbose_name='Название категории')),
                ('name_ru', models.CharField(max_length=40, null=True, verbose_name='Название категории')),
                ('name_en', models.CharField(max_length=40, null=True, verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Категория обучения',
                'verbose_name_plural': 'Категория обучения',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255, verbose_name='Заголовок')),
                ('title_uz', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('title_en', models.CharField(max_length=255, null=True, verbose_name='Заголовок')),
                ('description', tinymce.models.HTMLField(verbose_name='Описание')),
                ('description_uz', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('description_ru', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('description_en', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='post/', verbose_name='Изображение')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('published_date', models.DateField(verbose_name='Дата публикации')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.announcementcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Объявление',
                'verbose_name_plural': 'Объявления',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ElectronLibrary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=80, verbose_name='Имя')),
                ('name_uz', models.CharField(max_length=80, null=True, verbose_name='Имя')),
                ('name_ru', models.CharField(max_length=80, null=True, verbose_name='Имя')),
                ('name_en', models.CharField(max_length=80, null=True, verbose_name='Имя')),
                ('author', models.CharField(max_length=100, verbose_name='Автор')),
                ('author_uz', models.CharField(max_length=100, null=True, verbose_name='Автор')),
                ('author_ru', models.CharField(max_length=100, null=True, verbose_name='Автор')),
                ('author_en', models.CharField(max_length=100, null=True, verbose_name='Автор')),
                ('short_description', models.CharField(max_length=400, verbose_name='Краткое описание')),
                ('short_description_uz', models.CharField(max_length=400, null=True, verbose_name='Краткое описание')),
                ('short_description_ru', models.CharField(max_length=400, null=True, verbose_name='Краткое описание')),
                ('short_description_en', models.CharField(max_length=400, null=True, verbose_name='Краткое описание')),
                ('edition_author', models.CharField(max_length=100, verbose_name='Автор издания')),
                ('edition_author_uz', models.CharField(max_length=100, null=True, verbose_name='Автор издания')),
                ('edition_author_ru', models.CharField(max_length=100, null=True, verbose_name='Автор издания')),
                ('edition_author_en', models.CharField(max_length=100, null=True, verbose_name='Автор издания')),
                ('edition_type', models.CharField(max_length=100, verbose_name='Тип издания')),
                ('edition_type_uz', models.CharField(max_length=100, null=True, verbose_name='Тип издания')),
                ('edition_type_ru', models.CharField(max_length=100, null=True, verbose_name='Тип издания')),
                ('edition_type_en', models.CharField(max_length=100, null=True, verbose_name='Тип издания')),
                ('edition_year', models.DateField(null=True, verbose_name='Год издания')),
                ('file', models.FileField(upload_to='electron_libraries/', validators=[django.core.validators.FileExtensionValidator(['pdf'])], verbose_name='Файл книги')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.electronlibrarycategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Электронная библиотека',
                'verbose_name_plural': 'Электронные библиотеки',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Handout',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=100, null=True, verbose_name='Название')),
                ('file', models.FileField(upload_to='handout/', validators=[django.core.validators.FileExtensionValidator(['pdf', 'jpg', 'jpeg', 'png', 'zip', 'xls'])], verbose_name='Файл')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('type', models.CharField(blank=True, max_length=5, null=True, verbose_name='Тип')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.handoutcategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Раздаточный материал',
                'verbose_name_plural': 'Раздаточные материалы',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='HonestyTestAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answer', models.CharField(max_length=120, verbose_name='Отвечать')),
                ('answer_uz', models.CharField(max_length=120, null=True, verbose_name='Отвечать')),
                ('answer_ru', models.CharField(max_length=120, null=True, verbose_name='Отвечать')),
                ('answer_en', models.CharField(max_length=120, null=True, verbose_name='Отвечать')),
                ('is_true', models.BooleanField(default=False, verbose_name='')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_honest', to='services.honestytest', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Ответ на тест на честность',
                'verbose_name_plural': 'Ответ на тест на честность',
                'ordering': ('?',),
            },
        ),
        migrations.AddField(
            model_name='honestytest',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.honestytestcategory'),
        ),
        migrations.CreateModel(
            name='HonestyTestResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('result', models.BooleanField(default=False, verbose_name='Результат')),
                ('answer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='services.honestytestanswer', verbose_name='Ответ')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.customer', verbose_name='Клиент')),
                ('test', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='test_result', to='services.honestytest', verbose_name='Тест')),
            ],
            options={
                'verbose_name': 'Результат честного теста',
                'verbose_name_plural': 'Результаты честного теста',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=300, verbose_name='Заголовок')),
                ('title_uz', models.CharField(max_length=300, null=True, verbose_name='Заголовок')),
                ('title_ru', models.CharField(max_length=300, null=True, verbose_name='Заголовок')),
                ('title_en', models.CharField(max_length=300, null=True, verbose_name='Заголовок')),
                ('short_description', models.CharField(max_length=400, verbose_name='Краткое описание')),
                ('short_description_uz', models.CharField(max_length=400, null=True, verbose_name='Краткое описание')),
                ('short_description_ru', models.CharField(max_length=400, null=True, verbose_name='Краткое описание')),
                ('short_description_en', models.CharField(max_length=400, null=True, verbose_name='Краткое описание')),
                ('description', tinymce.models.HTMLField(verbose_name='Описание')),
                ('description_uz', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('description_ru', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('description_en', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('image', models.ImageField(upload_to='news/', verbose_name='Изображение')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликован')),
                ('published_date', models.DateField(verbose_name='Дата публикации')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.newscategory', verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Новость',
                'verbose_name_plural': 'Новости',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('phone_number', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('phone_number2', models.CharField(blank=True, max_length=15, null=True, verbose_name='Номер телефона 2')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Электронная почта')),
                ('address', models.CharField(max_length=255, verbose_name='Адрес')),
                ('address_uz', models.CharField(max_length=255, null=True, verbose_name='Адрес')),
                ('address_ru', models.CharField(max_length=255, null=True, verbose_name='Адрес')),
                ('address_en', models.CharField(max_length=255, null=True, verbose_name='Адрес')),
                ('weblink', models.URLField(blank=True, null=True, verbose_name='Ссылка')),
                ('instagram', models.URLField(blank=True, null=True, verbose_name='Инстаграм')),
                ('telegram', models.URLField(blank=True, null=True, verbose_name='Телеграм')),
                ('facebook', models.URLField(blank=True, null=True, verbose_name='Фейсбук')),
                ('twitter', models.URLField(blank=True, null=True, verbose_name='Твиттер')),
                ('youtube', models.URLField(blank=True, null=True, verbose_name='Ютуб')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='services.categoryorganization', verbose_name='Категория')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.district', verbose_name='Область')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='base.region', verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Организация',
                'verbose_name_plural': 'Организации',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='HonestyTestStatistic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='authentication.customer', verbose_name='Клиент')),
                ('test_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='stats_test_type', to='services.honestytestcategory', verbose_name='Тип теста')),
                ('organization', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.organization', verbose_name='Организация')),
            ],
            options={
                'verbose_name': 'Статистика честного теста',
                'verbose_name_plural': 'Статистики честного теста',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ProfessionalEthics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=300, verbose_name='Название')),
                ('title_uz', models.CharField(max_length=300, null=True, verbose_name='Название')),
                ('title_ru', models.CharField(max_length=300, null=True, verbose_name='Название')),
                ('title_en', models.CharField(max_length=300, null=True, verbose_name='Название')),
                ('description', tinymce.models.HTMLField(verbose_name='Описание')),
                ('description_uz', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('description_ru', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('description_en', tinymce.models.HTMLField(null=True, verbose_name='Описание')),
                ('case', models.CharField(max_length=300, verbose_name='Дилемма')),
                ('case_uz', models.CharField(max_length=300, null=True, verbose_name='Дилемма')),
                ('case_ru', models.CharField(max_length=300, null=True, verbose_name='Дилемма')),
                ('case_en', models.CharField(max_length=300, null=True, verbose_name='Дилемма')),
                ('profession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.profession', verbose_name='Профессия')),
            ],
            options={
                'verbose_name': 'Профессиональная этика',
                'verbose_name_plural': 'Профессиональная этика',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='OfficerAdvice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('comment', models.TextField(max_length=350, verbose_name='Комментарий')),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовано')),
                ('officer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.user', verbose_name='Клиент')),
                ('professional_ethics', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.professionalethics', verbose_name='Профессиональная этика')),
            ],
            options={
                'verbose_name': 'Советы клиентам',
                'verbose_name_plural': 'Советы клиентам',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='Training',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('name_uz', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_ru', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('name_en', models.CharField(max_length=255, null=True, verbose_name='Название')),
                ('image', models.ImageField(upload_to='trainings/', verbose_name='Изображение')),
                ('description', tinymce.models.HTMLField(verbose_name='описание')),
                ('description_uz', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('description_ru', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('description_en', tinymce.models.HTMLField(null=True, verbose_name='описание')),
                ('video', models.URLField(default='https://www.youtube.com/', verbose_name='URL-адрес видео на YouTube')),
                ('video_length', models.FloatField(default=0, verbose_name='Продолжительность видео')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликовано')),
                ('views', models.IntegerField(default=0, verbose_name='Просмотры')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.trainingcategory', verbose_name='Название категории')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TrainingMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('filename', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя файла')),
                ('filename_uz', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя файла')),
                ('filename_ru', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя файла')),
                ('filename_en', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя файла')),
                ('file', models.FileField(blank=True, null=True, upload_to='trainings/media/', validators=[services.utils.validate_file_type_and_size], verbose_name='Файл')),
                ('video', models.URLField(blank=True, null=True, verbose_name='URL-адрес видео на YouTube')),
                ('video_title', models.CharField(blank=True, null=True, verbose_name='Название видео')),
                ('video_title_uz', models.CharField(blank=True, null=True, verbose_name='Название видео')),
                ('video_title_ru', models.CharField(blank=True, null=True, verbose_name='Название видео')),
                ('video_title_en', models.CharField(blank=True, null=True, verbose_name='Название видео')),
                ('order', models.IntegerField(verbose_name='Очередь')),
                ('type', models.CharField(choices=[('PDF', 'PDF'), ('MP4', 'MP4'), ('PPT', 'PPT')], editable=False, max_length=5, verbose_name='Тип')),
                ('training', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_materials', to='services.training', verbose_name='Урок')),
            ],
            options={
                'verbose_name': 'Видео урока',
                'verbose_name_plural': 'Видео уроков',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ViolationReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event_time', models.DateTimeField(verbose_name='Время события')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('informant_full_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Полное имя информатора')),
                ('informant_phone_number', models.CharField(blank=True, max_length=100, null=True, verbose_name='Номер телефона информатора')),
                ('informant_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Электронная почта информатора')),
                ('is_anonim', models.BooleanField(default=False, verbose_name='Аноним')),
                ('district', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.district', verbose_name='Округ')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.organization', verbose_name='Организация')),
                ('region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='base.region', verbose_name='Область')),
                ('report_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='services.reporttype', verbose_name='Тип отчета')),
            ],
            options={
                'verbose_name': 'Отчет о нарушении',
                'verbose_name_plural': 'Отчет о нарушении',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ViolationFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('file', models.FileField(upload_to='violation_report/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=('pdf', 'jpg', 'jpeg', 'png', 'mp4'), message='File must be in (pdf, jpg, jpeg, png, mp4)')], verbose_name='Файл')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.violationreport', verbose_name='Нарушение')),
            ],
            options={
                'verbose_name': 'Файл нарушения',
                'verbose_name_plural': 'Файлы нарушений',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='GuiltyPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('full_name', models.CharField(max_length=100, verbose_name='Полное имя')),
                ('position', models.CharField(max_length=100, verbose_name='Позиция')),
                ('phone_number', models.CharField(max_length=100, verbose_name='Номер телефона')),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.violationreport', verbose_name='Отчет о нарушении')),
            ],
            options={
                'verbose_name': 'Виновное лицо',
                'verbose_name_plural': 'Виновное лицо',
                'ordering': ('-created_at',),
            },
        ),
    ]
